name: Python Unit Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
   
   
    - name: Install Ubuntu dependencies
      run: |
        OS="$OSTYPE"
        case $OS in
          'linux*')
            OS='linux'
            ;;
          'msys*')
            OS='windows'
            ;;
          'darwin*') 
            OS='mac'
            ;;
        esac

        if [ $OS == 'mac' ] | [ $OS == 'linux' ]; then
          if [ -z $(git remote show origin | grep "Fetch URL:" | grep git@github.com:MICA-MNI/BrainStat.git) ]
          then
            git config remote.upstream.fetch refs/heads/*:refs/remotes/upstream/*
          else
            git config remote.origin.fetch refs/heads/*:refs/origin/upstream/*
          fi
        else
          if ( -z $(git remote show origin | grep "Fetch URL:" | grep git@github.com:MICA-MNI/BrainStat.git) )
          then
            git config remote.upstream.fetch refs/heads/*:refs/remotes/upstream/*
          else
            git config remote.origin.fetch refs/heads/*:refs/origin/upstream/*
          fi
        fi
        git fetch origin test-data-2.0
        python -m pip install --upgrade pip
        pip install pytest gitpython
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Test with pytest
      run: |
        python3 -m pytest
